<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="rabbitgame/gameOver" type="0" type_size="1" nature="4" stm_value_name="rabbitgame/gameOver" inner="1" tooltip="rabbitgame/gameOver desc" id="4" /><Input name="rabbitgame/levelChange" type="0" type_size="1" nature="4" stm_value_name="rabbitgame/levelChange" inner="1" tooltip="rabbitgame/levelChange desc" id="5" /><Input name="rabbitgame/rabbitHit" type="0" type_size="1" nature="4" stm_value_name="rabbitgame/rabbitHit" inner="1" tooltip="rabbitgame/rabbitHit desc" id="6" /><Input name="BackBumperPressed" type="0" type_size="1" nature="4" stm_value_name="BackBumperPressed" inner="1" tooltip="BackBumperPressed desc" id="7" /><Input name="RightBumperPressed" type="0" type_size="1" nature="4" stm_value_name="RightBumperPressed" inner="1" tooltip="RightBumperPressed desc" id="8" /><Input name="LeftBumperPressed" type="0" type_size="1" nature="4" stm_value_name="LeftBumperPressed" inner="1" tooltip="LeftBumperPressed desc" id="9" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="84.0896"><Box name="Show Website" id="3" localization="8" tooltip="" x="384" y="58"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import qi
from time import sleep

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tablet  = self.session().service("ALTabletService")

        self.signalID = None

    def onUnload(self):
        if self.signalID:
            self.tablet.onJSEvent.disconnect(self.signalID)

    def onInput_onStart(self):
        url = self.getParameter("file")

        if self.getParameter("showLocalAppFile"):
            url = self.behaviorAbsolutePath().split("apps/")
            if len(url) > 1:
                url = str( url[1].split("/")[0] ) + "/"

            url = "http://198.18.0.1/apps/" + url + self.getParameter("file")

        self.tablet.showWebview( url )

        if ".html" in url or ".htm" in url or ".js" in url:
            self.signalID = self.tablet.onJSEvent.connect(self.callback)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box


    def callback(self, event):
        self.event(event)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="event" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Parameter name="file" inherits_from_parent="0" content_type="3" value="index.html" default_value="index.html" custom_choice="0" tooltip="" id="6" /><Parameter name="showLocalAppFile" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="7" /></Box><Box name="Show Website (1)" id="2" localization="8" tooltip="" x="649" y="56"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import qi
from time import sleep

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tablet  = self.session().service("ALTabletService")

        self.signalID = None

    def onUnload(self):
        if self.signalID:
            self.tablet.onJSEvent.disconnect(self.signalID)

    def onInput_onStart(self):
        url = self.getParameter("file")

        if self.getParameter("showLocalAppFile"):
            url = self.behaviorAbsolutePath().split("apps/")
            if len(url) > 1:
                url = str( url[1].split("/")[0] ) + "/"

            url = "http://198.18.0.1/apps/" + url + self.getParameter("file")

        self.tablet.showWebview( url )

        if ".html" in url or ".htm" in url or ".js" in url:
            self.signalID = self.tablet.onJSEvent.connect(self.callback)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box


    def callback(self, event):
        self.event(event)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="event" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Parameter name="file" inherits_from_parent="0" content_type="3" value="explain.html" default_value="index.html" custom_choice="0" tooltip="" id="6" /><Parameter name="showLocalAppFile" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="7" /></Box><Box name="rabbitHit" id="7" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="216" y="481"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="817" y="53"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="541" y="55"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : "  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " すばらしいです ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[すばらしいです]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="164" y="86"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="100" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Switch Case" id="3" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="286" y="107"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(1)):
			self.output_1(p)
		elif(p == self.typeConversion(2)):
			self.output_2(p)
		elif(p == self.typeConversion(3)):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /></Box><Box name="Localized Text (1)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="552" y="205"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Super! ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " スーパー ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Super!]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[スーパー]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Box name="Localized Text (2)" id="6" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="563" y="330"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Weiter so! ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " 悪くない ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Weiter so!]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[悪くない]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Box name="Play Sound" id="7" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="191" y="309"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/plop.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0.8" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" /><Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="6" /><Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" /><Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="3" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="LevelChange" id="9" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="213" y="346"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Du machst das super! Weiter so. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " あなたは素晴らしい ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Du machst das super! Weiter so.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[あなたは素晴らしい]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="GameOver" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="209" y="241"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Get Data" id="3" localization="8" tooltip="Retrieves from NAOqi&apos;s shared memory the given value at the given key." x="423" y="70"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, key):
        _alKey = self.getParameter("key")
        if '%' in _alKey and key:
            _alKey = _alKey.replace('%', key)

        result = self.memory.getData(_alKey)
        self.onStopped(result)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. If stimulus contains string the % in ALMemory key is replaced with it." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the retrieved value from ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="rabbitgame/gameOver" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Text Edit" id="7" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="178" y="86"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("rabbitgame/gameOver")]]></content></script><pluginContent><text><![CDATA[rabbitgame/gameOver]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="3" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Show Website (3)" id="11" localization="8" tooltip="" x="1179" y="10"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import qi
from time import sleep

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tablet  = self.session().service("ALTabletService")

        self.signalID = None

    def onUnload(self):
        if self.signalID:
            self.tablet.onJSEvent.disconnect(self.signalID)

    def onInput_onStart(self):
        url = self.getParameter("file")

        if self.getParameter("showLocalAppFile"):
            url = self.behaviorAbsolutePath().split("apps/")
            if len(url) > 1:
                url = str( url[1].split("/")[0] ) + "/"

            url = "http://198.18.0.1/apps/" + url + self.getParameter("file")

        self.tablet.showWebview( url )

        if ".html" in url or ".htm" in url or ".js" in url:
            self.signalID = self.tablet.onJSEvent.connect(self.callback)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box


    def callback(self, event):
        self.event(event)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="event" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Parameter name="file" inherits_from_parent="0" content_type="3" value="game.html" default_value="index.html" custom_choice="0" tooltip="" id="6" /><Parameter name="showLocalAppFile" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="7" /></Box><Box name="init" id="1" localization="8" tooltip="" x="209" y="112"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Speech Settings" id="17" localization="8" tooltip="Sets the speech settings for system wide usage." x="167" y="27"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.mem.declareEvent( 'sys/speech/shape' )
        self.mem.declareEvent( 'sys/speech/speed' )

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.mem.insertData( 'sys/speech/shape', self.getParameter("Voice shaping (%)") )
        self.mem.insertData( 'sys/speech/speed', self.getParameter("Speed (%)") )

        self.logger.debug( "Set voice parameter to " + str(self.getParameter("Voice shaping (%)")) + "% shape and " + str(self.getParameter("Speed (%)")) + "% speed" )

        self.onStopped() #activate the output of the box

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /></Box><Box name="Set Speech Lang." id="21" localization="8" tooltip="Select the language you would like the robot to speak. Any following call to&#x0A;ALTextToSpeech (Say box for instance) will use this language." x="170" y="160"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy("ALTextToSpeech")

    def onInput_onSet(self):
        try:
            self.tts.setLanguage( self.getParameter("Language") )
        except:
            pass
        self.onReady()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="German" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks." id="4"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Wait For Signals" id="1" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="513" y="105"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" /><Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" /><Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" /></Box><Box name="Basic Awareness" id="4" localization="8" tooltip="This box is an interface to the module ALBasicAwareness.&#x0A;&#x0A;It is a simple way to make the robot establish and keep eye contact with people.&#x0A;&#x0A;V1.1.0" x="198" y="329"><bitmap>media/images/box/tracker/basicawareness.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        try:
            self.awareness = ALProxy('ALBasicAwareness')
        except Exception as e:
            self.awareness = None
            self.logger.error(e)

        self.memory = ALProxy('ALMemory')

        self.isRunning = False
        self.trackedHuman = -1

        import threading
        self.subscribingLock = threading.Lock()

        self.BIND_PYTHON(self.getName(), "setParameter")


    def onUnload(self):
        if self.isRunning:
            if self.awareness:
                self.awareness.stopAwareness()
                self.setALMemorySubscription(False)
            self.isRunning = False


    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do

        self.isRunning = True
        self.trackedHuman = -1
        if self.awareness:
            self.awareness.setEngagementMode(self.getParameter('Engagement Mode'))
            self.awareness.setTrackingMode(self.getParameter('Tracking Mode'))
            self.awareness.setStimulusDetectionEnabled('Sound', self.getParameter('Sound Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Movement', self.getParameter('Movement Stimulus'))
            self.awareness.setStimulusDetectionEnabled('People', self.getParameter('People Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Touch', self.getParameter('Touch Stimulus'))
            self.setALMemorySubscription(True)
            self.awareness.startAwareness()



    def onInput_onStop(self):
        if not self.isRunning:
            return # already stopped, nothing to do

        self.onUnload()
        self.onStopped()


    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if self.awareness:
            if parameterName == 'Sound Stimulus':
                self.awareness.setStimulusDetectionEnabled('Sound', newValue)
            elif parameterName == 'Movement Stimulus':
                self.awareness.setStimulusDetectionEnabled('Movement', newValue)
            elif parameterName == 'People Stimulus':
                self.awareness.setStimulusDetectionEnabled('People', newValue)
            elif parameterName == 'Touch Stimulus':
                self.awareness.setStimulusDetectionEnabled('Touch', newValue)


    # callbacks for ALBasicAwareness events
    def onStimulusDetected(self, eventName, stimulusName, subscriberIdentifier):
        self.StimulusDetected(stimulusName)

    def onHumanTracked(self, eventName, humanID, subscriberIdentifier):
        self.trackedHuman = humanID
        self.HumanTracked(humanID)

    def onHumanLost(self, eventName, subscriberIdentifier):
        self.HumanLost(self.trackedHuman)
        self.trackedHuman = -1


    def setALMemorySubscription(self, subscribe):
        self.subscribingLock.acquire()
        if subscribe:
            self.memory.subscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName(), 'onStimulusDetected')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanTracked', self.getName(), 'onHumanTracked')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanLost', self.getName(), 'onHumanLost')
        else:
            self.memory.unsubscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanTracked', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanLost', self.getName())

        self.subscribingLock.release()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the Basic Awareness with the given Engagement and Tracking mode parameters, using the given stimuli." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the Basic Awareness." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="StimulusDetected" type="3" type_size="1" nature="2" inner="0" tooltip="This output is stimulated when BasicAwareness detects a stimulus amongst the tracked stimulus.&#x0A;&#x0A;The output data is the stimulus&apos; name." id="5" /><Output name="HumanTracked" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when ALBasicAwareness detects a stimulus that is confirmed to be a human.&#x0A;&#x0A;The output data is the ID corresponding to the tracked human. It is shared with PeoplePerception and can be used there. This output is triggered with -1 if ALBasicAwareness tried to detect a human but failed." id="6" /><Output name="HumanLost" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when the human currently tracked is lost.&#x0A;&#x0A; The output data is the ID corresponding to the lost human. It can be reused in PeoplePerception." id="7" /><Parameter name="Engagement Mode" inherits_from_parent="0" content_type="3" value="FullyEngaged" default_value="Unengaged" custom_choice="0" tooltip='The engagement mode specifies how &quot;focused&quot; the robot is on the engaged person.' id="8"><Choice value="Unengaged" /><Choice value="FullyEngaged" /><Choice value="SemiEngaged" /></Parameter><Parameter name="Tracking Mode" inherits_from_parent="0" content_type="3" value="Head" default_value="Head" custom_choice="0" tooltip="The tracking mode describes how the robot keeps eye contact with an engaged person." id="9"><Choice value="Head" /><Choice value="BodyRotation" /><Choice value="WholeBody" /></Parameter><Parameter name="Sound Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="10" /><Parameter name="Movement Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="11" /><Parameter name="People Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="12" /><Parameter name="Touch Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="13" /></Box><Box name="Autonomous Abilities" id="2" localization="8" tooltip="Autonomous Abilities exists to keep the robot alive at all times. But this box allows you to disable all or parts of the Autonomous Abilities (Autonomous Blinking, Background Movement, Basic Awareness, Listening Movement, Speaking Movement)." x="214" y="498"><bitmap>media/images/box/auto-abilities.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.autonomouslife = ALProxy("ALAutonomousLife")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.enableAnAbility("AutonomousBlinking")
        self.enableAnAbility("BackgroundMovement")
        self.enableAnAbility("BasicAwareness")
        self.enableAnAbility("ListeningMovement")
        self.enableAnAbility("SpeakingMovement")
        self.onDone() # activate output of the box

    def enableAnAbility(self, name):
        self.autonomouslife.setAutonomousAbilityEnabled(name, self.getParameter(name))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="AutonomousBlinking" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables the robot to make its eye leds blink when it sees someone and when it is interacting." id="4" /><Parameter name="BackgroundMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Defines which slight movements the robot does autonomously when its limbs are not moving." id="5" /><Parameter name="BasicAwareness" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Allow to make the robot establish and keep eye contact with people." id="6" /><Parameter name="ListeningMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Enables some slight movements showing that the robot is listening." id="7" /><Parameter name="SpeakingMovement" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Enables to start autonomously movements during the speech of the robot." id="8" /></Box><Link inputowner="17" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="21" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="17" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="21" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global Bodytalk (1)" id="5" localization="8" tooltip="" x="491" y="233"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Super dass du mit mir spielst. Lass uns zusammen Hasen fangen. Ich erkläre dir wie das geht. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " ゲームを一緒にやってくれてありがとうございます。一緒にウサギを捕まえましょう。今からゲームのルールを説明します。  ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Super dass du mit mir spielst. Lass uns zusammen Hasen fangen. Ich erkläre dir wie das geht.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[ゲームを一緒にやってくれてありがとうございます。一緒にウサギを捕まえましょう。今からゲームのルールを説明します。 ]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global Bodytalk (2)" id="4" localization="8" tooltip="" x="724" y="257"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Das ist Hase Hoppsi. Ihn und seine Freunde wollen wir einfangen. Wenn du einen Hasen siehst, tipp mit deinem Finger auf ihn. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " このウサギは「ホップシ」です。ホップシとホップシの友達を捕まえたいので、ウサギが見かけたら、指で画面をタップしてください。  ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Das ist Hase Hoppsi. Ihn und seine Freunde wollen wir einfangen. Wenn du einen Hasen siehst, tipp mit deinem Finger auf ihn.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[このウサギは「ホップシ」です。ホップシとホップシの友達を捕まえたいので、ウサギが見かけたら、指で画面をタップしてください。 ]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global Bodytalk (3)" id="8" localization="8" tooltip="" x="1116" y="259"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " 始まりますよ。 ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " 始まりますよ。 ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[始まりますよ。]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[始まりますよ。]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Goto Posture" id="6" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="991" y="423"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandInit" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6"><Choice value="Crouch" /><Choice value="LyingBack" /><Choice value="LyingBelly" /><Choice value="Sit" /><Choice value="SitRelax" /><Choice value="StandInit" /><Choice value="Stand" /><Choice value="StandZero" /></Parameter><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" /><Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="Say Global Bodytalk" id="13" localization="8" tooltip="" x="1228" y="133"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Das hat Spaß gemacht! ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " 楽しかったです。\\　楽しかった。 ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Das hat Spaß gemacht!]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[楽しかったです。\　楽しかった。]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>10</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Only Once" id="14" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="836" y="59"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="14" indexofoutput="3" /><Link inputowner="0" indexofinput="10" outputowner="13" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="7" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="8" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="9" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>