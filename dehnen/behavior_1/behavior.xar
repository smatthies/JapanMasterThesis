<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="einleitung" id="1" localization="8" tooltip="" x="202" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="241" y="113"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Alles klar, aufgewärmt sind wir jetzt ja schon dann können wir uns jetzt  auch noch etwas deeehnen.   ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Alles klar, aufgewärmt sind wir jetzt ja schon dann können wir uns jetzt  auch noch etwas deeehnen.  ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="finger und daumen zusammen" id="2" localization="8" tooltip="" x="339" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="308" y="48"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Wir fangen mit unseren Fingern an. Streckt eure Finger ganz weit auseinander. Nun macht eine Faust und dann lasst die Finger wieder etwas lockerer. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Wir fangen mit unseren Fingern an. Streckt eure Finger ganz weit auseinander. Nun macht eine Faust und dann lasst die Finger wieder etwas lockerer.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="932" y="80"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Prima. Im Alltag vergisst man oft die Finger einfach mal auszustrecken und lang zu machen. Dabei sind sie so wichtig! ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Prima. Im Alltag vergisst man oft die Finger einfach mal auszustrecken und lang zu machen. Dabei sind sie so wichtig!]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="446" y="51"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="779" y="59"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="anweisung" id="9" localization="8" tooltip="" x="613" y="66"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Python Script" id="2" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="312" y="154"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        print("Test")
        sentences = ["Denkt daran die Übungen an Euer Tempo anzupassen. Was die anderen machen ist egal", "Merkt ihr schon etwas?","Variiert doch mal das Tempo. Vielleicht findet die die Übung ja schneller oder aber auch langsam besser"]
        print("debug")
        length = len(sentences) - 1
        print(length)
        randint = random.randint(0,length)
        print(randint)
        print(sentences[randint])
        self.say(sentences[randint])
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="say" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /></Box><Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="469" y="156"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="finger strecken" id="3" localization="8" tooltip="" x="258" y="254"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="139"><ActuatorList model=""><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-78.0469" /><Key frame="14" value="-78.1348" /><Key frame="26" value="-78.0469" /><Key frame="39" value="-78.0469" /><Key frame="51" value="-78.1348" /><Key frame="64" value="-78.1348" /><Key frame="76" value="-78.2227" /><Key frame="89" value="-78.2227" /><Key frame="101" value="-78.3984" /><Key frame="114" value="-78.3984" /><Key frame="126" value="-78.3984" /><Key frame="139" value="-78.5742" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-82.5293" /><Key frame="14" value="-82.5293" /><Key frame="26" value="-82.5293" /><Key frame="39" value="-82.5293" /><Key frame="51" value="-82.5293" /><Key frame="64" value="-82.5293" /><Key frame="76" value="-82.5293" /><Key frame="89" value="-82.5293" /><Key frame="101" value="-82.5293" /><Key frame="114" value="-82.5293" /><Key frame="126" value="-82.5293" /><Key frame="139" value="-82.5293" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="-0.634065" /><Key frame="14" value="-0.634065" /><Key frame="26" value="0.497364" /><Key frame="39" value="0.497364" /><Key frame="51" value="-1.01238" /><Key frame="64" value="-0.445347" /><Key frame="76" value="-0.822783" /><Key frame="89" value="-1.20022" /><Key frame="101" value="0.498242" /><Key frame="114" value="0.498242" /><Key frame="126" value="0.497364" /><Key frame="138" value="-1.38894" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="30.8496" /><Key frame="14" value="30.7617" /><Key frame="26" value="30.9375" /><Key frame="39" value="30.8496" /><Key frame="51" value="30.8496" /><Key frame="64" value="30.8496" /><Key frame="76" value="30.8496" /><Key frame="89" value="30.8496" /><Key frame="101" value="30.8496" /><Key frame="114" value="30.8496" /><Key frame="126" value="30.8496" /><Key frame="139" value="30.8496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="13.0078" /><Key frame="14" value="13.2715" /><Key frame="26" value="13.9746" /><Key frame="39" value="14.0625" /><Key frame="51" value="13.9746" /><Key frame="64" value="14.2383" /><Key frame="76" value="14.3262" /><Key frame="89" value="14.502" /><Key frame="101" value="14.502" /><Key frame="114" value="14.502" /><Key frame="126" value="14.502" /><Key frame="139" value="14.502" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="8.08364" /><Key frame="14" value="6.76526" /><Key frame="26" value="3.16169" /><Key frame="39" value="2.98591" /><Key frame="51" value="2.89802" /><Key frame="64" value="2.98591" /><Key frame="76" value="2.98591" /><Key frame="89" value="2.98591" /><Key frame="101" value="2.98591" /><Key frame="114" value="3.0738" /><Key frame="126" value="3.0738" /><Key frame="139" value="2.89802" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="50.8887" /><Key frame="14" value="50.8887" /><Key frame="26" value="50.8887" /><Key frame="39" value="50.9766" /><Key frame="51" value="50.9766" /><Key frame="64" value="50.9766" /><Key frame="76" value="50.9766" /><Key frame="89" value="50.9766" /><Key frame="101" value="50.9766" /><Key frame="114" value="50.9766" /><Key frame="126" value="50.9766" /><Key frame="139" value="50.9766" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="85.3418" /><Key frame="14" value="85.4297" /><Key frame="26" value="85.4297" /><Key frame="39" value="85.3418" /><Key frame="51" value="85.3418" /><Key frame="64" value="85.3418" /><Key frame="76" value="85.4297" /><Key frame="89" value="85.3418" /><Key frame="101" value="85.3418" /><Key frame="114" value="85.3418" /><Key frame="126" value="85.3418" /><Key frame="139" value="85.3418" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="-1.1888" /><Key frame="14" value="-1.18967" /><Key frame="26" value="0.509666" /><Key frame="39" value="0.508787" /><Key frame="51" value="-1.00008" /><Key frame="65" value="-0.623523" /><Key frame="76" value="-1.18967" /><Key frame="89" value="-1.37839" /><Key frame="101" value="0.508787" /><Key frame="114" value="0.508787" /><Key frame="126" value="0.508787" /><Key frame="139" value="-0.812238" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="17.7539" /><Key frame="14" value="17.7539" /><Key frame="26" value="17.7539" /><Key frame="39" value="17.666" /><Key frame="51" value="17.5781" /><Key frame="64" value="17.5781" /><Key frame="76" value="17.4023" /><Key frame="89" value="17.4023" /><Key frame="101" value="17.3144" /><Key frame="114" value="17.4023" /><Key frame="126" value="17.4023" /><Key frame="139" value="17.3144" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-1.84571" /><Key frame="14" value="-1.84571" /><Key frame="26" value="-2.02149" /><Key frame="39" value="-2.02149" /><Key frame="51" value="-2.02149" /><Key frame="64" value="-2.02149" /><Key frame="76" value="-2.10938" /><Key frame="89" value="-2.10938" /><Key frame="101" value="-2.10938" /><Key frame="114" value="-2.19727" /><Key frame="126" value="-2.19727" /><Key frame="139" value="-2.37305" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="17.6638" /><Key frame="14" value="17.6638" /><Key frame="26" value="17.4002" /><Key frame="39" value="17.4002" /><Key frame="51" value="17.1365" /><Key frame="64" value="17.1365" /><Key frame="76" value="17.1365" /><Key frame="89" value="17.1365" /><Key frame="101" value="17.1365" /><Key frame="114" value="17.1365" /><Key frame="126" value="17.1365" /><Key frame="139" value="17.1365" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="3" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="kopf drehen" id="3" localization="8" tooltip="" x="483" y="40"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="120" y="40"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Als nächstes ist unser Nacken dran.. Dreht dafür euren Kopf nach links und nach rechts aber lasst euren Oberkörper gerade ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Als nächstes ist unser Nacken dran.. Dreht dafür euren Kopf nach links und nach rechts aber lasst euren Oberkörper gerade]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Kopf links und rechts" id="1" localization="8" tooltip="" x="594" y="318"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="350" size="351"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="1" value="-14.3262" /><Key frame="350" value="-15.4098" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="1" value="-2.63671" /><Key frame="13" value="-5.44922" /><Key frame="25" value="-23.9941" /><Key frame="38" value="-44.7363" /><Key frame="50" value="-64.2481" /><Key frame="63" value="-80.0684" /><Key frame="75" value="-83.7598" /><Key frame="88" value="-80.9473" /><Key frame="225" value="84.5508" /><Key frame="238" value="85.7813" /><Key frame="250" value="84.2871" /><Key frame="313" value="1.40625" /><Key frame="325" value="-3.77929" /><Key frame="351" value="-4.06156" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-13.9746" /><Key frame="13" value="-13.9746" /><Key frame="25" value="-13.9746" /><Key frame="38" value="-13.9746" /><Key frame="50" value="-13.9746" /><Key frame="63" value="-13.9746" /><Key frame="75" value="-13.9746" /><Key frame="88" value="-13.9746" /><Key frame="225" value="-13.9746" /><Key frame="238" value="-13.9746" /><Key frame="250" value="-13.9746" /><Key frame="263" value="-13.9746" /><Key frame="275" value="-13.9746" /><Key frame="288" value="-13.9746" /><Key frame="300" value="-13.9746" /><Key frame="313" value="-13.9746" /><Key frame="325" value="-13.9746" /><Key frame="338" value="-13.9746" /><Key frame="350" value="-13.9746" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-95.0098" /><Key frame="13" value="-95.0098" /><Key frame="25" value="-95.0098" /><Key frame="38" value="-95.0098" /><Key frame="50" value="-95.0098" /><Key frame="63" value="-95.0098" /><Key frame="75" value="-95.0098" /><Key frame="88" value="-95.0098" /><Key frame="100" value="-95.0098" /><Key frame="113" value="-95.0098" /><Key frame="125" value="-95.0098" /><Key frame="138" value="-95.1856" /><Key frame="150" value="-95.0977" /><Key frame="163" value="-95.0977" /><Key frame="175" value="-95.0977" /><Key frame="188" value="-95.0977" /><Key frame="200" value="-95.0977" /><Key frame="213" value="-95.0977" /><Key frame="225" value="-95.0977" /><Key frame="238" value="-95.0977" /><Key frame="250" value="-95.0977" /><Key frame="263" value="-95.0977" /><Key frame="275" value="-95.0977" /><Key frame="288" value="-95.0977" /><Key frame="300" value="-95.0977" /><Key frame="313" value="-95.0977" /><Key frame="325" value="-95.0977" /><Key frame="338" value="-95.0977" /><Key frame="350" value="-95.0977" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.357645" /><Key frame="13" value="0.357645" /><Key frame="25" value="0.357645" /><Key frame="38" value="0.357645" /><Key frame="50" value="0.356766" /><Key frame="63" value="0.356766" /><Key frame="75" value="0.356766" /><Key frame="88" value="0.356766" /><Key frame="225" value="0.29877" /><Key frame="238" value="0.297891" /><Key frame="250" value="0.297891" /><Key frame="263" value="0.297891" /><Key frame="275" value="0.297891" /><Key frame="288" value="0.297891" /><Key frame="300" value="0.297891" /><Key frame="313" value="0.297891" /><Key frame="325" value="0.29877" /><Key frame="338" value="0.297891" /><Key frame="350" value="0.29877" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="93.252" /><Key frame="13" value="93.252" /><Key frame="25" value="93.252" /><Key frame="38" value="93.252" /><Key frame="50" value="93.252" /><Key frame="63" value="93.252" /><Key frame="75" value="93.252" /><Key frame="88" value="93.252" /><Key frame="100" value="93.252" /><Key frame="113" value="93.252" /><Key frame="125" value="93.252" /><Key frame="138" value="93.3399" /><Key frame="150" value="93.3399" /><Key frame="163" value="93.3399" /><Key frame="175" value="93.3399" /><Key frame="188" value="93.3399" /><Key frame="200" value="93.3399" /><Key frame="213" value="93.4277" /><Key frame="225" value="93.6914" /><Key frame="238" value="93.6914" /><Key frame="250" value="93.6914" /><Key frame="263" value="93.6914" /><Key frame="275" value="93.6914" /><Key frame="288" value="93.6914" /><Key frame="300" value="93.6914" /><Key frame="313" value="93.6914" /><Key frame="325" value="93.6914" /><Key frame="338" value="93.6914" /><Key frame="350" value="93.6914" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="8.87695" /><Key frame="13" value="8.87695" /><Key frame="25" value="8.87695" /><Key frame="38" value="8.87695" /><Key frame="50" value="8.87695" /><Key frame="63" value="8.87695" /><Key frame="75" value="8.87695" /><Key frame="88" value="8.87695" /><Key frame="225" value="9.49219" /><Key frame="238" value="9.58008" /><Key frame="250" value="9.58008" /><Key frame="263" value="9.49219" /><Key frame="275" value="9.4043" /><Key frame="288" value="9.22851" /><Key frame="300" value="8.96484" /><Key frame="313" value="8.96484" /><Key frame="325" value="8.96484" /><Key frame="338" value="8.96484" /><Key frame="350" value="8.96484" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="-16.5261" /><Key frame="13" value="-16.5261" /><Key frame="25" value="-16.5261" /><Key frame="38" value="-16.5261" /><Key frame="50" value="-16.5261" /><Key frame="63" value="-16.4382" /><Key frame="75" value="-16.5261" /><Key frame="88" value="-16.4382" /><Key frame="225" value="-16.4382" /><Key frame="238" value="-16.4382" /><Key frame="250" value="-16.4382" /><Key frame="263" value="-16.4382" /><Key frame="275" value="-16.4382" /><Key frame="288" value="-16.4382" /><Key frame="300" value="-16.4382" /><Key frame="313" value="-16.4382" /><Key frame="325" value="-16.4382" /><Key frame="338" value="-16.5261" /><Key frame="350" value="-16.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="12.2168" /><Key frame="13" value="12.2168" /><Key frame="25" value="12.2168" /><Key frame="38" value="12.2168" /><Key frame="50" value="12.2168" /><Key frame="63" value="12.2168" /><Key frame="75" value="12.2168" /><Key frame="88" value="12.1289" /><Key frame="225" value="11.8652" /><Key frame="238" value="11.9531" /><Key frame="250" value="11.9531" /><Key frame="263" value="11.9531" /><Key frame="275" value="11.9531" /><Key frame="288" value="11.9531" /><Key frame="300" value="11.9531" /><Key frame="313" value="11.9531" /><Key frame="325" value="11.9531" /><Key frame="338" value="12.041" /><Key frame="350" value="12.041" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="87.1875" /><Key frame="13" value="87.1875" /><Key frame="25" value="87.1875" /><Key frame="38" value="87.1875" /><Key frame="50" value="87.2754" /><Key frame="63" value="87.1875" /><Key frame="75" value="87.2754" /><Key frame="88" value="87.2754" /><Key frame="100" value="87.2754" /><Key frame="113" value="87.1875" /><Key frame="125" value="87.2754" /><Key frame="138" value="87.1875" /><Key frame="150" value="87.1875" /><Key frame="163" value="87.2754" /><Key frame="175" value="87.2754" /><Key frame="188" value="87.2754" /><Key frame="200" value="87.2754" /><Key frame="213" value="87.1875" /><Key frame="225" value="87.1875" /><Key frame="238" value="87.2754" /><Key frame="250" value="87.2754" /><Key frame="263" value="87.2754" /><Key frame="275" value="87.2754" /><Key frame="288" value="87.2754" /><Key frame="300" value="87.2754" /><Key frame="313" value="87.2754" /><Key frame="325" value="87.2754" /><Key frame="338" value="87.1875" /><Key frame="350" value="87.2754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.478032" /><Key frame="13" value="0.479789" /><Key frame="25" value="0.479789" /><Key frame="38" value="0.479789" /><Key frame="50" value="0.479789" /><Key frame="63" value="0.480668" /><Key frame="75" value="0.480668" /><Key frame="88" value="0.480668" /><Key frame="225" value="0.503515" /><Key frame="238" value="0.503515" /><Key frame="250" value="0.499121" /><Key frame="263" value="0.493849" /><Key frame="275" value="0.49297" /><Key frame="288" value="0.489455" /><Key frame="300" value="0.479789" /><Key frame="313" value="0.479789" /><Key frame="325" value="0.479789" /><Key frame="338" value="0.479789" /><Key frame="350" value="0.482425" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="88.418" /><Key frame="13" value="88.418" /><Key frame="25" value="88.418" /><Key frame="38" value="88.418" /><Key frame="50" value="88.418" /><Key frame="63" value="88.418" /><Key frame="75" value="88.418" /><Key frame="88" value="88.418" /><Key frame="100" value="88.418" /><Key frame="113" value="88.418" /><Key frame="125" value="88.418" /><Key frame="138" value="88.418" /><Key frame="150" value="88.418" /><Key frame="163" value="88.418" /><Key frame="175" value="88.418" /><Key frame="188" value="88.418" /><Key frame="200" value="88.418" /><Key frame="213" value="88.5937" /><Key frame="225" value="88.8574" /><Key frame="238" value="88.9453" /><Key frame="250" value="88.9453" /><Key frame="263" value="88.9453" /><Key frame="275" value="88.9453" /><Key frame="288" value="88.9453" /><Key frame="300" value="88.9453" /><Key frame="313" value="88.9453" /><Key frame="325" value="88.9453" /><Key frame="338" value="88.9453" /><Key frame="350" value="88.8574" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-9.75586" /><Key frame="13" value="-9.66797" /><Key frame="25" value="-9.66797" /><Key frame="38" value="-9.58008" /><Key frame="50" value="-9.66797" /><Key frame="63" value="-9.58008" /><Key frame="75" value="-9.66797" /><Key frame="88" value="-9.58008" /><Key frame="225" value="-8.4375" /><Key frame="238" value="-8.4375" /><Key frame="250" value="-8.52539" /><Key frame="263" value="-8.70117" /><Key frame="275" value="-8.70117" /><Key frame="288" value="-8.96484" /><Key frame="300" value="-9.22851" /><Key frame="313" value="-9.22851" /><Key frame="325" value="-9.14062" /><Key frame="338" value="-9.05273" /><Key frame="350" value="-8.52539" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="11.3356" /><Key frame="13" value="11.3356" /><Key frame="25" value="12.1267" /><Key frame="38" value="12.1267" /><Key frame="50" value="12.1267" /><Key frame="63" value="12.1267" /><Key frame="75" value="12.1267" /><Key frame="88" value="12.1267" /><Key frame="225" value="12.2146" /><Key frame="238" value="12.2146" /><Key frame="250" value="12.2146" /><Key frame="263" value="12.2146" /><Key frame="275" value="12.2146" /><Key frame="288" value="12.2146" /><Key frame="300" value="12.2146" /><Key frame="313" value="12.2146" /><Key frame="325" value="12.3024" /><Key frame="338" value="13.1813" /><Key frame="350" value="16.2576" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Say Global Bodytalk (1)" id="2" localization="8" tooltip="" x="550" y="33"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Dreh den Kopf nur so weit wie es dir gut tut. Halte gern auch einen Moment inne und bleibe in der gedrehten Position.  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Dreh den Kopf nur so weit wie es dir gut tut. Halte gern auch einen Moment inne und bleibe in der gedrehten Position. ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="410" y="29"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (1)" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="689" y="39"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (2)" id="4" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="954" y="28"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="8" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global Bodytalk (2)" id="7" localization="8" tooltip="" x="1100" y="24"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Sehr gut. Unsere Nackenmuskulatur ist nun gut gedehnt. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Sehr gut. Unsere Nackenmuskulatur ist nun gut gedehnt.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="anweisung" id="9" localization="8" tooltip="" x="822" y="45"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Python Script" id="2" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="312" y="154"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        print("Test")
        sentences = ["Denkt daran die Übungen an Euer Tempo anzupassen. Was die anderen machen ist egal", "Merkt ihr schon etwas?","Variiert doch mal das Tempo. Vielleicht findet die die Übung ja schneller oder aber auch langsam besser"]
        print("debug")
        length = len(sentences) - 1
        print(length)
        randint = random.randint(0,length)
        print(randint)
        print(sentences[randint])
        self.say(sentences[randint])
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="say" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /></Box><Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="469" y="156"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="9" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Arme nach oben strecken" id="4" localization="8" tooltip="" x="633" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="326" y="36"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="132" y="59"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Streckt eure Arme so weit zur Seite aus wie es für euch geht  und bewegt sie dann langsam nach vorne so wie ich das mache ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Streckt eure Arme so weit zur Seite aus wie es für euch geht  und bewegt sie dann langsam nach vorne so wie ich das mache]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="486" y="35"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global (1)" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="642" y="38"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Streckt die Arme auch hier weit nach vorne und Dann bewegt die Arme wieder nach außen. Lass dir dabei ruhig Zeit ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Streckt die Arme auch hier weit nach vorne und Dann bewegt die Arme wieder nach außen. Lass dir dabei ruhig Zeit]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Wait (1)" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="756" y="39"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (2)" id="7" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1045" y="33"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="13" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global Bodytalk (1)" id="8" localization="8" tooltip="" x="1194" y="28"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="150" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Super. Dadurch das ihr die Arme weit von eurem Körper wegstreckt, dehnt ihr eure Schultern.  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Super. Dadurch das ihr die Arme weit von eurem Körper wegstreckt, dehnt ihr eure Schultern. ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global (2)" id="11" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="108" y="42"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Jetzt sind unsere Arme dran. Hierbei ist es wichtig, dass du nicht zu schnell bist. Es ist anstrengender und effektiver, wenn du dich etwas langsamer bewegst. Also lass dich nicht von den anderen oder meinen Bewegungen zu sehr beeinflussen und finde dein eigenes Tempo. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Jetzt sind unsere Arme dran. Hierbei ist es wichtig, dass du nicht zu schnell bist. Es ist anstrengender und effektiver, wenn du dich etwas langsamer bewegst. Also lass dich nicht von den anderen oder meinen Bewegungen zu sehr beeinflussen und finde dein eigenes Tempo.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Arme spreizen" id="5" localization="8" tooltip="" x="294" y="264"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="12" start_frame="1" end_frame="-1" size="303"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="1" value="9.05273" /><Key frame="30" value="9.05273" /><Key frame="70" value="9.05273" /><Key frame="110" value="9.05273" /><Key frame="150" value="9.05273" /><Key frame="190" value="9.05273" /><Key frame="230" value="9.05273" /><Key frame="271" value="9.05273" /><Key frame="303" value="9.05273" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="1" value="-13.623" /><Key frame="30" value="-13.623" /><Key frame="70" value="-13.623" /><Key frame="110" value="-13.623" /><Key frame="150" value="-13.623" /><Key frame="190" value="-13.623" /><Key frame="230" value="-13.623" /><Key frame="271" value="-13.623" /><Key frame="303" value="-13.623" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="1" value="-6.32813" /><Key frame="30" value="-7.03126" /><Key frame="70" value="-6.06446" /><Key frame="110" value="-6.85547" /><Key frame="150" value="-5.97657" /><Key frame="190" value="-7.29493" /><Key frame="230" value="-7.99804" /><Key frame="271" value="-7.91015" /><Key frame="303" value="-7.4707" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="1" value="0" /><Key frame="30" value="0.615236" /><Key frame="70" value="-0.263673" /><Key frame="110" value="-0.0878909" /><Key frame="150" value="-1.40625" /><Key frame="190" value="0" /><Key frame="230" value="0" /><Key frame="271" value="0" /><Key frame="303" value="0.615236" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="1" value="1.05469" /><Key frame="30" value="0.439454" /><Key frame="70" value="2.54882" /><Key frame="110" value="0.0878909" /><Key frame="150" value="1.58204" /><Key frame="190" value="0.791018" /><Key frame="230" value="2.81249" /><Key frame="271" value="0.439454" /><Key frame="303" value="2.02149" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-17.5781" /><Key frame="30" value="-14.1504" /><Key frame="70" value="-12.5684" /><Key frame="110" value="-12.6562" /><Key frame="150" value="-14.3262" /><Key frame="190" value="-13.7988" /><Key frame="230" value="-13.0078" /><Key frame="271" value="-13.7109" /><Key frame="303" value="-13.623" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="18.7207" /><Key frame="30" value="-9.05273" /><Key frame="70" value="-0.263673" /><Key frame="110" value="-0.263673" /><Key frame="150" value="-0.263673" /><Key frame="190" value="-0.263673" /><Key frame="230" value="-0.615236" /><Key frame="271" value="-0.615236" /><Key frame="303" value="1.58204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.460457" /><Key frame="30" value="0.460457" /><Key frame="70" value="0.460457" /><Key frame="110" value="0.460457" /><Key frame="150" value="0.460457" /><Key frame="190" value="0.460457" /><Key frame="230" value="0.460457" /><Key frame="271" value="0.460457" /><Key frame="303" value="0.460457" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="86.5723" /><Key frame="30" value="4.63959" /><Key frame="70" value="-1.45111" /><Key frame="110" value="-1.69983" /><Key frame="150" value="-2.26637" /><Key frame="191" value="-1.99522" /><Key frame="230" value="-1.62689" /><Key frame="272" value="-1.2828" /><Key frame="303" value="83.1445" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="21.8848" /><Key frame="30" value="90.2637" /><Key frame="70" value="9.49219" /><Key frame="110" value="90.3516" /><Key frame="150" value="7.29493" /><Key frame="190" value="89.5" /><Key frame="230" value="10.3711" /><Key frame="271" value="90.7031" /><Key frame="303" value="23.2031" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="-103.627" /><Key frame="30" value="-103.627" /><Key frame="70" value="-103.627" /><Key frame="110" value="-103.627" /><Key frame="150" value="-103.627" /><Key frame="190" value="-103.627" /><Key frame="230" value="-103.627" /><Key frame="271" value="-103.627" /><Key frame="303" value="-103.627" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="2.28516" /><Key frame="30" value="1.14258" /><Key frame="70" value="1.14258" /><Key frame="110" value="1.14258" /><Key frame="150" value="1.14258" /><Key frame="190" value="1.14258" /><Key frame="230" value="1.14258" /><Key frame="271" value="1.14258" /><Key frame="303" value="4.6582" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="1.75782" /><Key frame="30" value="45.8789" /><Key frame="70" value="37.3535" /><Key frame="110" value="37.3535" /><Key frame="150" value="35.5957" /><Key frame="190" value="35.5957" /><Key frame="230" value="35.8594" /><Key frame="271" value="35.8594" /><Key frame="303" value="36.4746" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.407733" /><Key frame="30" value="0.407733" /><Key frame="70" value="0.407733" /><Key frame="110" value="0.407733" /><Key frame="150" value="0.407733" /><Key frame="190" value="0.407733" /><Key frame="230" value="0.407733" /><Key frame="271" value="0.407733" /><Key frame="303" value="0.407733" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="87.0996" /><Key frame="30" value="3.86718" /><Key frame="70" value="-1.40625" /><Key frame="110" value="-2.02149" /><Key frame="150" value="-2.54882" /><Key frame="190" value="-2.54882" /><Key frame="230" value="-2.28516" /><Key frame="271" value="-2.28516" /><Key frame="303" value="83.6719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-19.5117" /><Key frame="30" value="-79.9805" /><Key frame="70" value="-9.31641" /><Key frame="110" value="-91.2305" /><Key frame="150" value="1.49414" /><Key frame="190" value="-89.5" /><Key frame="230" value="-1.9336" /><Key frame="271" value="-90.6152" /><Key frame="303" value="-9.4043" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="42.1856" /><Key frame="30" value="40.9551" /><Key frame="70" value="40.9551" /><Key frame="110" value="40.3399" /><Key frame="150" value="40.3399" /><Key frame="190" value="40.3399" /><Key frame="230" value="40.3399" /><Key frame="271" value="39.6368" /><Key frame="303" value="39.0215" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Say Global (3)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="905" y="37"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="132" y="59"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Versucht die Arme weit von eurem Körper wegzustrecken. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Versucht die Arme weit von eurem Körper wegzustrecken.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="10" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="arme ueber kopf ziehen" id="5" localization="8" tooltip="" x="767" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="152" y="39"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Die nächste Übung soll unseren Rumpf etwas dehnen und für eine gute Beweglichkeit sorgen. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Die nächste Übung soll unseren Rumpf etwas dehnen und für eine gute Beweglichkeit sorgen.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="linker arm über kopf" id="4" localization="8" tooltip="" x="554" y="291"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="325"><ActuatorList model=""><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="1" value="-0.175782" /><Key frame="13" value="-0.175782" /><Key frame="58" value="-0.850393" /><Key frame="70" value="-7.23097" /><Key frame="82" value="-15.2442" /><Key frame="95" value="-22.7685" /><Key frame="109" value="-29.825" /><Key frame="125" value="-29.825" /><Key frame="139" value="-28.7992" /><Key frame="154" value="-20.0221" /><Key frame="163" value="-10.4213" /><Key frame="170" value="-0.762502" /><Key frame="213" value="-0.878909" /><Key frame="225" value="-0.703127" /><Key frame="238" value="-0.351564" /><Key frame="250" value="0.0878909" /><Key frame="263" value="0.0878909" /><Key frame="275" value="-0.527345" /><Key frame="288" value="-0.0878909" /><Key frame="300" value="-0.0878909" /><Key frame="313" value="-0.0878909" /><Key frame="325" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="1.49414" /><Key frame="13" value="-0.351564" /><Key frame="25" value="-0.791018" /><Key frame="38" value="-0.791018" /><Key frame="50" value="-0.791018" /><Key frame="63" value="-0.527345" /><Key frame="75" value="-0.791018" /><Key frame="85" value="-6.59397" /><Key frame="95" value="-15.9871" /><Key frame="109" value="-29.2011" /><Key frame="138" value="-40.4297" /><Key frame="150" value="-42.0996" /><Key frame="163" value="-42.1875" /><Key frame="175" value="-42.1875" /><Key frame="188" value="-42.1875" /><Key frame="200" value="-39.2871" /><Key frame="213" value="-26.2793" /><Key frame="225" value="-9.49219" /><Key frame="238" value="-4.83398" /><Key frame="250" value="-4.83398" /><Key frame="263" value="-4.74609" /><Key frame="275" value="-5.53711" /><Key frame="288" value="-4.92188" /><Key frame="300" value="-4.83398" /><Key frame="313" value="-4.57031" /><Key frame="325" value="1.66993" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-44.1211" /><Key frame="325" value="-43.7695" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.498242" /><Key frame="325" value="0.493849" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="80.1563" smooth="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.333333" ordinateParam="0.377191" /><Tangent side="right" interpType="bezier" abscissaParam="12.7402" ordinateParam="-14.4165" /></Key><Key frame="48" value="-59.6115" /><Key frame="193" value="-59.5172" /><Key frame="261" value="80.8379" smooth="1"><Tangent side="left" interpType="bezier" abscissaParam="-0.0068" ordinateParam="-10.7094" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="13.0957" /><Key frame="13" value="14.0625" /><Key frame="25" value="14.5898" /><Key frame="38" value="19.6875" /><Key frame="50" value="20.2148" /><Key frame="63" value="20.8301" /><Key frame="75" value="20.8854" /><Key frame="88" value="21.1816" /><Key frame="100" value="21.0938" /><Key frame="113" value="17.9297" /><Key frame="125" value="12.7441" /><Key frame="138" value="12.832" /><Key frame="150" value="12.9199" /><Key frame="163" value="12.9199" /><Key frame="175" value="12.9199" /><Key frame="188" value="12.9199" /><Key frame="200" value="16.084" /><Key frame="213" value="21.5332" /><Key frame="225" value="21.7969" /><Key frame="238" value="22.7637" /><Key frame="250" value="26.3672" /><Key frame="263" value="26.8066" /><Key frame="275" value="24.7852" /><Key frame="288" value="21.4453" /><Key frame="300" value="14.5898" /><Key frame="313" value="15.293" /><Key frame="325" value="15.9961" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="-43.4209" /><Key frame="13" value="-44.4756" /><Key frame="25" value="-53.6164" /><Key frame="38" value="-53.88" /><Key frame="50" value="-52.3859" /><Key frame="63" value="-52.1222" /><Key frame="75" value="-52.9132" /><Key frame="110" value="-48.7101" /><Key frame="138" value="-36.829" /><Key frame="288" value="-37.5322" /><Key frame="300" value="-31.0282" /><Key frame="325" value="-30.4129" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="0.9668" /><Key frame="25" value="0.9668" /><Key frame="37" value="1.05469" /><Key frame="50" value="1.05469" /><Key frame="62" value="1.05469" /><Key frame="75" value="0.9668" /><Key frame="87" value="0.9668" /><Key frame="100" value="0.9668" /><Key frame="112" value="0.9668" /><Key frame="125" value="1.05469" /><Key frame="137" value="0.9668" /><Key frame="150" value="0.9668" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="97.1191" /><Key frame="25" value="97.1191" /><Key frame="37" value="97.1191" /><Key frame="50" value="97.1191" /><Key frame="62" value="97.1191" /><Key frame="75" value="97.1191" /><Key frame="87" value="97.1191" /><Key frame="100" value="97.1191" /><Key frame="112" value="97.1191" /><Key frame="125" value="97.1191" /><Key frame="137" value="97.1191" /><Key frame="150" value="97.1191" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.471881" /><Key frame="25" value="0.471002" /><Key frame="37" value="0.471881" /><Key frame="50" value="0.471002" /><Key frame="62" value="0.471881" /><Key frame="75" value="0.471881" /><Key frame="87" value="0.471881" /><Key frame="100" value="0.471881" /><Key frame="112" value="0.471881" /><Key frame="125" value="0.471881" /><Key frame="137" value="0.471881" /><Key frame="150" value="0.471881" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="80.8594" /><Key frame="25" value="80.8594" /><Key frame="37" value="80.8594" /><Key frame="50" value="80.8594" /><Key frame="62" value="80.8594" /><Key frame="75" value="80.8594" /><Key frame="87" value="80.9473" /><Key frame="100" value="80.8594" /><Key frame="112" value="80.8594" /><Key frame="125" value="80.8594" /><Key frame="137" value="80.9473" /><Key frame="150" value="80.9473" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-7.73437" /><Key frame="25" value="-7.73437" /><Key frame="37" value="-7.73437" /><Key frame="50" value="-7.73437" /><Key frame="62" value="-7.73437" /><Key frame="75" value="-7.73437" /><Key frame="87" value="-7.73437" /><Key frame="100" value="-7.73437" /><Key frame="112" value="-12.407" /><Key frame="125" value="-16.4666" /><Key frame="140" value="-22.6027" /><Key frame="168" value="-19.2987" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="-28.2156" /><Key frame="25" value="-28.2156" /><Key frame="37" value="-28.2156" /><Key frame="50" value="-28.2156" /><Key frame="62" value="-28.2156" /><Key frame="75" value="-28.2156" /><Key frame="87" value="-28.2156" /><Key frame="100" value="-28.2156" /><Key frame="112" value="-28.2156" /><Key frame="125" value="-28.2156" /><Key frame="137" value="-28.2156" /><Key frame="150" value="-28.2156" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Say Global" id="2" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="580" y="39"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Sehr gut. Nun machen wir das selbe mit dem rechten Arm und lehne dich dabei nach links. Danach wieder mit dem linken.. und so weiter.  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Sehr gut. Nun machen wir das selbe mit dem rechten Arm und lehne dich dabei nach links. Danach wieder mit dem linken.. und so weiter. ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="rechter arm über kopf" id="3" localization="8" tooltip="" x="731" y="165"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="300"><ActuatorList model=""><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="1" value="-0.527345" /><Key frame="14" value="-0.527345" /><Key frame="26" value="-0.351564" /><Key frame="39" value="0.351564" /><Key frame="51" value="0.527345" /><Key frame="64" value="0.9668" /><Key frame="76" value="0.527345" /><Key frame="89" value="0.9668" /><Key frame="101" value="8.9688" /><Key frame="115" value="18.7646" /><Key frame="124" value="27.1958" /><Key frame="142" value="31.2859" /><Key frame="156" value="29.58" /><Key frame="172" value="24.2866" /><Key frame="181" value="12.4684" /><Key frame="189" value="5.01174" /><Key frame="201" value="0.703127" /><Key frame="214" value="0.263673" /><Key frame="226" value="0" /><Key frame="239" value="-0.615236" /><Key frame="251" value="-0.615236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-4.74609" /><Key frame="26" value="-4.74609" /><Key frame="38" value="-4.74609" /><Key frame="51" value="-4.74609" /><Key frame="63" value="-4.74609" /><Key frame="76" value="-4.74609" /><Key frame="88" value="-4.74609" /><Key frame="101" value="-4.74609" /><Key frame="113" value="-4.74609" /><Key frame="175" value="-4.50558" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-43.6816" /><Key frame="26" value="-43.5938" /><Key frame="38" value="-43.5938" /><Key frame="51" value="-43.6816" /><Key frame="63" value="-43.5938" /><Key frame="76" value="-43.5938" /><Key frame="88" value="-43.5938" /><Key frame="101" value="-43.5938" /><Key frame="113" value="-43.5938" /><Key frame="178" value="-44.0861" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.487698" /><Key frame="26" value="0.487698" /><Key frame="38" value="0.487698" /><Key frame="51" value="0.487698" /><Key frame="63" value="0.487698" /><Key frame="76" value="0.487698" /><Key frame="88" value="0.487698" /><Key frame="101" value="0.487698" /><Key frame="113" value="0.487698" /><Key frame="176" value="0.0832034" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="78.75" /><Key frame="26" value="78.75" /><Key frame="38" value="78.75" /><Key frame="51" value="78.75" /><Key frame="63" value="78.75" /><Key frame="76" value="78.75" /><Key frame="88" value="78.75" /><Key frame="101" value="78.75" /><Key frame="144" value="69.4466" /><Key frame="177" value="78.269" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="18.7576" /><Key frame="25" value="18.7576" /><Key frame="37" value="18.7576" /><Key frame="50" value="18.7576" /><Key frame="62" value="18.7576" /><Key frame="75" value="18.7576" /><Key frame="87" value="18.7576" /><Key frame="100" value="18.7576" /><Key frame="133" value="18.3531" /><Key frame="174" value="18.2766" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="-32.6981" /><Key frame="26" value="-32.6981" /><Key frame="38" value="-32.6981" /><Key frame="51" value="-32.786" /><Key frame="63" value="-32.6981" /><Key frame="76" value="-32.6981" /><Key frame="88" value="-32.6981" /><Key frame="101" value="-32.6981" /><Key frame="113" value="-32.6981" /><Key frame="174" value="-31.168" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="1.14258" /><Key frame="14" value="2.02149" /><Key frame="26" value="3.86718" /><Key frame="39" value="16.3477" /><Key frame="51" value="21.4453" /><Key frame="64" value="22.1484" /><Key frame="76" value="19.5996" /><Key frame="89" value="8.78906" /><Key frame="101" value="10.0195" /><Key frame="114" value="19.1602" /><Key frame="126" value="31.7285" /><Key frame="251" value="31.8609" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="96.7676" /><Key frame="14" value="97.207" /><Key frame="26" value="97.6465" /><Key frame="39" value="97.6465" /><Key frame="51" value="97.6465" /><Key frame="64" value="91.9336" /><Key frame="76" value="92.1973" /><Key frame="89" value="81.2109" /><Key frame="101" value="45.8789" /><Key frame="111" value="35.7141" /><Key frame="126" value="29.707" /><Key frame="139" value="29.707" /><Key frame="151" value="29.707" /><Key frame="164" value="29.7949" /><Key frame="176" value="29.7949" /><Key frame="189" value="29.707" /><Key frame="201" value="29.707" /><Key frame="214" value="29.707" /><Key frame="226" value="29.707" /><Key frame="239" value="29.707" /><Key frame="251" value="29.6191" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.471002" /><Key frame="14" value="0.471002" /><Key frame="26" value="0.471002" /><Key frame="39" value="0.471002" /><Key frame="51" value="0.456063" /><Key frame="64" value="0.45167" /><Key frame="76" value="0.447276" /><Key frame="89" value="0.44464" /><Key frame="101" value="0.442003" /><Key frame="114" value="0.441125" /><Key frame="126" value="0.441125" /><Key frame="139" value="0.441125" /><Key frame="151" value="0.441125" /><Key frame="164" value="0.441125" /><Key frame="176" value="0.441125" /><Key frame="189" value="0.441125" /><Key frame="201" value="0.441125" /><Key frame="214" value="0.441125" /><Key frame="226" value="0.438489" /><Key frame="239" value="0.431459" /><Key frame="251" value="0.431459" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="81.3867" /><Key frame="14" value="79.8926" /><Key frame="26" value="74.9707" /><Key frame="39" value="59.2383" /><Key frame="51" value="37.5293" /><Key frame="64" value="-4.30664" /><Key frame="77" value="-43.0021" /><Key frame="89" value="-56.8652" /><Key frame="101" value="-61.9629" /><Key frame="114" value="-63.8086" /><Key frame="189" value="-63.6328" /><Key frame="201" value="-61.6992" /><Key frame="218" value="-54.6165" /><Key frame="226" value="-42.4512" /><Key frame="239" value="3.60351" /><Key frame="300" value="80.3422" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-11.25" /><Key frame="14" value="-13.623" /><Key frame="26" value="-23.7305" /><Key frame="39" value="-34.8926" /><Key frame="51" value="-51.3281" /><Key frame="65" value="-50.7938" /><Key frame="76" value="-33.5742" /><Key frame="89" value="-17.1387" /><Key frame="101" value="-6.32813" /><Key frame="114" value="0.0878909" /><Key frame="126" value="0.439454" /><Key frame="139" value="0.615236" /><Key frame="151" value="0.527345" /><Key frame="160" value="0.563143" /><Key frame="171" value="-2.17936" /><Key frame="178" value="-6.0913" /><Key frame="190" value="-20.0659" /><Key frame="199" value="-32.0989" /><Key frame="207" value="-45.7829" /><Key frame="221" value="-54.362" /><Key frame="260" value="-25.1318" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="-27.7762" /><Key frame="14" value="-27.7762" /><Key frame="26" value="-27.7762" /><Key frame="39" value="-27.7762" /><Key frame="51" value="-27.7762" /><Key frame="64" value="-27.6004" /><Key frame="76" value="-27.6004" /><Key frame="89" value="-27.6883" /><Key frame="101" value="-28.0399" /><Key frame="114" value="-28.0399" /><Key frame="126" value="-27.8641" /><Key frame="139" value="-27.8641" /><Key frame="151" value="-27.8641" /><Key frame="164" value="-27.7762" /><Key frame="176" value="-27.7762" /><Key frame="189" value="-27.7762" /><Key frame="201" value="-27.7762" /><Key frame="214" value="-27.7762" /><Key frame="226" value="-27.7762" /><Key frame="239" value="-27.952" /><Key frame="251" value="-27.952" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="451" y="37"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="8" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (1)" id="7" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="718" y="36"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global (1)" id="8" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="851" y="35"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Macht nur so weit mit wie es euch gut tut und streckt euch nicht zu weit. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Macht nur so weit mit wie es euch gut tut und streckt euch nicht zu weit.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Wait (2)" id="9" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="972" y="27"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (3)" id="11" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1238" y="31"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global Bodytalk (2)" id="12" localization="8" tooltip="" x="1379" y="31"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Sehr gut. Euer Oberkörper ist nun auch gut gedehnt! ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Sehr gut. Euer Oberkörper ist nun auch gut gedehnt!]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="anweisung" id="10" localization="8" tooltip="" x="1110" y="45"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Python Script" id="2" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="312" y="154"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        print("Test")
        sentences = ["Denkt daran die Übungen an Euer Tempo anzupassen. Was die anderen machen ist egal", "Merkt ihr schon etwas?","Variiert doch mal das Tempo. Vielleicht findet die die Übung ja schneller oder aber auch langsam besser"]
        print("debug")
        length = len(sentences) - 1
        print(length)
        randint = random.randint(0,length)
        print(randint)
        print(sentences[randint])
        self.say(sentences[randint])
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="say" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /></Box><Box name="Say Text" id="1" localization="8" tooltip="Say the text received on its input." x="469" y="156"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global (2)" id="14" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="296" y="43"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Zieh deinen linken Arm seitlich über deinen Kopf. Versuch deine Hand dabei nicht auf deinem Kopf abzulegen sondern halte den Arm gestreckt und lehne dich nach rechts .  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Zieh deinen linken Arm seitlich über deinen Kopf. Versuch deine Hand dabei nicht auf deinem Kopf abzulegen sondern halte den Arm gestreckt und lehne dich nach rechts . ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="14" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="haende zum Boden" id="6" localization="8" tooltip="" x="907" y="35"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="128" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Wir sollten uns auch unserem Rücken widmen.  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Wir sollten uns auch unserem Rücken widmen. ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Hände Richtung Boden" id="3" localization="8" tooltip="" x="309" y="233"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="290"><ActuatorList model=""><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="1" value="-6.76758" /><Key frame="13" value="-6.76758" /><Key frame="43" value="-6.32863" /><Key frame="108" value="-45.7504" /><Key frame="180" value="-31.6671" /><Key frame="239" value="-7.77408" /><Key frame="263" value="-7.64648" /><Key frame="275" value="-7.38281" /><Key frame="288" value="-7.29493" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-11.3379" /><Key frame="225" value="-11.4258" /><Key frame="238" value="-5.625" /><Key frame="250" value="-0.263673" /><Key frame="263" value="-0.351564" /><Key frame="275" value="-0.527345" /><Key frame="288" value="-0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-81.9141" /><Key frame="288" value="-80.7715" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.440246" /><Key frame="288" value="0.45167" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="92.373" /><Key frame="13" value="92.2852" /><Key frame="25" value="92.2852" /><Key frame="38" value="91.6699" /><Key frame="50" value="85.6055" /><Key frame="107" value="45.434" /><Key frame="181" value="89.3154" /><Key frame="194" value="90.7217" /><Key frame="206" value="90.7217" /><Key frame="219" value="90.7217" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="10.1953" /><Key frame="288" value="9.05273" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="-31.4676" /><Key frame="225" value="-26.0183" /><Key frame="238" value="-21.7996" /><Key frame="250" value="-20.2175" /><Key frame="288" value="-20.3933" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="11.5137" /><Key frame="13" value="11.5137" /><Key frame="25" value="11.5137" /><Key frame="38" value="13.1836" /><Key frame="50" value="16.875" /><Key frame="63" value="17.8418" /><Key frame="75" value="17.8418" /><Key frame="88" value="17.8418" /><Key frame="100" value="17.8418" /><Key frame="113" value="17.9297" /><Key frame="125" value="17.9297" /><Key frame="138" value="17.9297" /><Key frame="150" value="17.8418" /><Key frame="163" value="15.3809" /><Key frame="175" value="15.293" /><Key frame="188" value="15.8203" /><Key frame="200" value="16.4356" /><Key frame="213" value="16.9629" /><Key frame="225" value="16.9629" /><Key frame="238" value="17.2266" /><Key frame="250" value="17.3144" /><Key frame="263" value="17.4023" /><Key frame="275" value="17.9297" /><Key frame="288" value="17.9297" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="84.4629" /><Key frame="13" value="84.4629" /><Key frame="25" value="84.4629" /><Key frame="38" value="84.375" /><Key frame="50" value="84.6387" /><Key frame="63" value="84.5508" /><Key frame="75" value="84.5508" /><Key frame="88" value="84.5508" /><Key frame="100" value="84.5508" /><Key frame="113" value="84.5508" /><Key frame="125" value="84.6387" /><Key frame="138" value="84.6387" /><Key frame="150" value="84.6387" /><Key frame="163" value="84.5508" /><Key frame="175" value="84.375" /><Key frame="188" value="84.375" /><Key frame="200" value="84.375" /><Key frame="213" value="84.375" /><Key frame="225" value="84.375" /><Key frame="238" value="84.2871" /><Key frame="250" value="84.2871" /><Key frame="263" value="84.2871" /><Key frame="275" value="84.2871" /><Key frame="288" value="84.2871" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.502636" /><Key frame="288" value="0.534271" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="92.1973" /><Key frame="13" value="92.1973" /><Key frame="25" value="92.1973" /><Key frame="38" value="91.3184" /><Key frame="50" value="89.209" /><Key frame="107" value="45.3848" /><Key frame="177" value="91.494" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-10.0195" /><Key frame="290" value="-10.045" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="28.2108" /><Key frame="13" value="28.2987" /><Key frame="25" value="28.2987" /><Key frame="38" value="16.7849" /><Key frame="50" value="13.2692" /><Key frame="63" value="15.8181" /><Key frame="75" value="15.8181" /><Key frame="88" value="15.6423" /><Key frame="100" value="12.3903" /><Key frame="113" value="9.48991" /><Key frame="125" value="9.48991" /><Key frame="138" value="9.40201" /><Key frame="150" value="5.62267" /><Key frame="163" value="4.56796" /><Key frame="175" value="5.35899" /><Key frame="188" value="5.35899" /><Key frame="200" value="5.35899" /><Key frame="213" value="5.35899" /><Key frame="225" value="5.35899" /><Key frame="238" value="5.35899" /><Key frame="250" value="5.35899" /><Key frame="263" value="5.35899" /><Key frame="275" value="5.35899" /><Key frame="288" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="1" value="0" /><Key frame="290" value="-0.292718" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="1" value="1.05469" /><Key frame="13" value="1.05469" /><Key frame="44" value="1.34149" /><Key frame="79" value="11.5742" /><Key frame="108" value="19.0014" /><Key frame="179" value="14.1276" /><Key frame="209" value="5.43764" /><Key frame="232" value="0.494961" /><Key frame="263" value="-0.615236" /><Key frame="275" value="-0.527345" /><Key frame="288" value="-0.703127" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="299" y="53"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Bewegt eure Hände zum Boden und legt euren Oberkörper auf euren Beinen ab. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Bewegt eure Hände zum Boden und legt euren Oberkörper auf euren Beinen ab.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Say Global (1)" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="570" y="53"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="143" y="60"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Das sieht bei Euch doch schon super aus. Es ist auch ok wenn ihr nicht ganz runter kommt. Kommt danach wieder hoch und wiederholt die Übung.  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Das sieht bei Euch doch schon super aus. Es ist auch ok wenn ihr nicht ganz runter kommt. Kommt danach wieder hoch und wiederholt die Übung. ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Say Global Bodytalk (1)" id="2" localization="8" tooltip="" x="1134" y="46"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="91" y="61"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Prima Nun ist auch unser Rücken gedehnt worden. Das ist auch eine prima Bewegung die man oft im Alltag braucht. Zum Beispiel wenn etwas auf den Boden fällt. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Prima Nun ist auch unser Rücken gedehnt worden. Das ist auch eine prima Bewegung die man oft im Alltag braucht. Zum Beispiel wenn etwas auf den Boden fällt.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="423" y="55"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="6" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (1)" id="7" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="709" y="48"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="6" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (2)" id="8" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="976" y="52"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="6" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global (2)" id="9" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="842" y="47"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="143" y="60"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Vergesst nicht zu atmen während ihr die Übung macht. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Vergesst nicht zu atmen während ihr die Übung macht.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="3" indexofinput="3" outputowner="9" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Beine strecken" id="7" localization="8" tooltip="" x="1047" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="175" y="52"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Nun sollten wir auch unsere Oberschenkel dehnen. Hebt dafür eure Beine abwechselnd an oder streckt sie aus so weit es euch gut tut. Links. Rechts. Links. Rechts. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Nun sollten wir auch unsere Oberschenkel dehnen. Hebt dafür eure Beine abwechselnd an oder streckt sie aus so weit es euch gut tut. Links. Rechts. Links. Rechts.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="show on tablet" id="7" localization="8" tooltip="" x="746" y="274"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="19" start_frame="1" end_frame="-1" size="113"><ActuatorList model=""><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="1" value="-89.8242" /><Key frame="13" value="-89.8242" /><Key frame="25" value="-89.8242" /><Key frame="38" value="-89.8242" /><Key frame="50" value="-88.8574" /><Key frame="63" value="-88.418" /><Key frame="75" value="-88.5938" /><Key frame="88" value="-88.6816" /><Key frame="100" value="-88.6816" /><Key frame="113" value="-88.5938" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="1" value="-36.8262" /><Key frame="13" value="-36.8262" /><Key frame="25" value="-36.9141" /><Key frame="38" value="-37.0019" /><Key frame="50" value="-37.4414" /><Key frame="63" value="-37.6172" /><Key frame="75" value="-37.6172" /><Key frame="88" value="-37.5293" /><Key frame="100" value="-37.3535" /><Key frame="113" value="-37.2656" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="1" value="0.49297" /><Key frame="13" value="0.49297" /><Key frame="25" value="0.495606" /><Key frame="38" value="0.497364" /><Key frame="50" value="0.498242" /><Key frame="63" value="0.499121" /><Key frame="75" value="0.5" /><Key frame="88" value="0.510545" /><Key frame="100" value="0.541301" /><Key frame="113" value="0.587873" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="1" value="48.5776" /><Key frame="10" value="48.7461" /><Key frame="22" value="48.7461" /><Key frame="35" value="48.7461" /><Key frame="47" value="48.7461" /><Key frame="60" value="48.7461" /><Key frame="72" value="48.7461" /><Key frame="85" value="48.7461" /><Key frame="97" value="48.7461" /><Key frame="110" value="48.6583" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="1" value="42.8487" /><Key frame="14" value="43.1857" /><Key frame="25" value="43.9476" /><Key frame="38" value="43.9476" /><Key frame="50" value="44.1234" /><Key frame="63" value="44.1234" /><Key frame="75" value="44.1234" /><Key frame="88" value="44.1234" /><Key frame="100" value="44.1234" /><Key frame="113" value="44.1234" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="1" value="-108.17" /><Key frame="13" value="-113.562" /><Key frame="23" value="-108.58" /><Key frame="31" value="-109.254" /><Key frame="43" value="-109.254" /><Key frame="56" value="-109.254" /><Key frame="68" value="-109.254" /><Key frame="81" value="-109.166" /><Key frame="93" value="-109.078" /><Key frame="106" value="-109.078" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="1" value="89.3848" /><Key frame="11" value="89.2969" /><Key frame="23" value="89.1211" /><Key frame="36" value="89.209" /><Key frame="48" value="89.209" /><Key frame="61" value="89.1211" /><Key frame="73" value="89.209" /><Key frame="86" value="89.209" /><Key frame="98" value="89.1211" /><Key frame="111" value="89.209" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="1" value="28.4766" /><Key frame="11" value="28.5645" /><Key frame="23" value="28.5645" /><Key frame="36" value="28.6523" /><Key frame="48" value="28.6523" /><Key frame="61" value="28.6523" /><Key frame="73" value="28.6523" /><Key frame="86" value="28.6523" /><Key frame="98" value="28.6523" /><Key frame="111" value="28.6523" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="1" value="0.40246" /><Key frame="11" value="0.42355" /><Key frame="23" value="0.456942" /><Key frame="36" value="0.490334" /><Key frame="48" value="0.517575" /><Key frame="61" value="0.533392" /><Key frame="73" value="0.536028" /><Key frame="86" value="0.540422" /><Key frame="98" value="0.559754" /><Key frame="111" value="0.586116" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="1" value="37.5544" /><Key frame="12" value="37.2907" /><Key frame="24" value="37.027" /><Key frame="37" value="37.027" /><Key frame="49" value="36.9391" /><Key frame="62" value="36.9391" /><Key frame="74" value="36.9391" /><Key frame="87" value="37.027" /><Key frame="99" value="36.9391" /><Key frame="112" value="36.9391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="1" value="-44.3853" /><Key frame="11" value="-44.3853" /><Key frame="23" value="-44.3853" /><Key frame="36" value="-44.3853" /><Key frame="48" value="-44.3853" /><Key frame="61" value="-44.3853" /><Key frame="73" value="-44.3853" /><Key frame="86" value="-44.2974" /><Key frame="98" value="-44.3853" /><Key frame="111" value="-44.3853" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="1" value="104.94" /><Key frame="11" value="104.94" /><Key frame="23" value="104.765" /><Key frame="36" value="104.677" /><Key frame="48" value="104.677" /><Key frame="61" value="104.677" /><Key frame="73" value="104.677" /><Key frame="86" value="104.677" /><Key frame="98" value="104.589" /><Key frame="111" value="104.589" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Play Video" id="2" localization="8" tooltip="Plays the video; returns when it&apos;s done.&#x0A;&#x0A;You can also interrupt, pause or resume the video.&#x0A;&#x0A;You can get events when the video starts or finishes.&#x0A;&#x0A;V1.0.0&#x0A;" x="304" y="232"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        self.isRunning = False
        self.startConnectId = None
        self.finishConnectId = None
        self.tabletService = None

    def onUnload(self):
        if self.tabletService:
            try:
                self.tabletService.stopVideo()
            except Exception as e:
                self.logger.error(e)
            finally:
                self.disconnectStartedListener()
                self.disconnectFinishedListener()
                self.isRunning = False

    def disconnectFinishedListener(self):
        if self.finishConnectId and self.tabletService:
            try:
                self.tabletService.videoFinished.disconnect(self.finishConnectId)
                self.finishConnectId = None
            except Exception as e:
                self.logger.error(e)

    def disconnectStartedListener(self):
        if self.startConnectId and self.tabletService:
            try:
                self.tabletService.videoStarted.disconnect(self.startConnectId)
                self.startConnectId = None
            except Exception as e:
                self.logger.error(e)

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partialUrl):
        import os
        subpath = os.path.join(self.packageUid(), os.path.normpath(partialUrl).lstrip("\\/"))
        if self.tabletService:
            return "http://%s/apps/%s" % (self.tabletService.robotIp(), subpath.replace(os.path.sep, "/"))
        else:
            self.logger.warning("No ALTabletService, can't get robot Ip.")
            return None

    def connectStartCallback(self):
        try:
            self.startConnectId = self.tabletService.videoStarted.connect(self.onVideoStarted)
        except Exception as err:
            self.logger.warning("Failed to subscribe to started callback: %s " % err)

    def connectStopCallback(self):
        try:
            self.finishConnectId = self.tabletService.videoFinished.connect(self.onVideoFinished)
        except Exception as err:
            self.logger.warning("Failed to subscribe to stopped callback: %s " % err)

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        self.tabletService = self._getTabletService()
        if self.tabletService:
            try:
                url = self.getParameter("VideoPath")
                if url == '':
                    self.logger.error("URL of the video is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                self.connectStartCallback()
                self.connectStopCallback()
                self.tabletService.playVideo(url)
            except Exception as err:
                self.logger.warning("Error during playVideo or subscribe: %s " % err)
                self.onStopped()
                self.isRunning = False
        else:
            self.logger.warning("No ALTabletService, can't play video.")
            self.onStopped()
            self.isRunning = False

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()

    def onInput_onPauseVideo(self):
        if self.tabletService:
            self.tabletService.pauseVideo()

    def onInput_onResumeVideo(self):
        if self.tabletService:
            self.tabletService.resumeVideo()

    def onVideoStarted(self):
        self.disconnectStartedListener()
        self.onStarted()

    def onVideoFinished(self):
        self.disconnectFinishedListener()
        self.onStopped()
        self.isRunning = False]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onPauseVideo" type="1" type_size="1" nature="1" inner="0" tooltip="Pause the video when a signal is received on this input." id="4" /><Input name="onResumeVideo" type="1" type_size="1" nature="1" inner="0" tooltip="Resume the video when a signal is received on this input." id="5" /><Output name="onStarted" type="1" type_size="1" nature="2" inner="0" tooltip="Triggered when the video started" id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" /><Parameter name="VideoPath" inherits_from_parent="0" content_type="3" value="Beineabwechselndhoch2.mp4" default_value="" custom_choice="0" tooltip='path of the video inside the &quot;html&quot; folder (e.g. &quot;/video/myvideo.mp4&quot;' id="8" /></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="958" y="58"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Prima. Da unsere Beine schon gut aufgewärmt waren müssen wir das nicht zu lange machen. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Prima. Da unsere Beine schon gut aufgewärmt waren müssen wir das nicht zu lange machen.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="361" y="42"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="744" y="49"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say Global Bodytalk (1)" id="3" localization="8" tooltip="" x="545" y="46"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Atmen nicht vergessen. Und wechselt die Beine ab. Links. Rechts. Links. Rechts. ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Atmen nicht vergessen. Und wechselt die Beine ab. Links. Rechts. Links. Rechts.]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="7" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="7" indexofinput="3" outputowner="2" indexofoutput="7" /><Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Play Sound" id="8" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="283" y="253"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../html/cute.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="41" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Ende" id="10" localization="8" tooltip="" x="1171" y="37"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Global Bodytalk" id="5" localization="8" tooltip="" x="402" y="66"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text.&#x0A;Uses global speech settings" x="518" y="64"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="171" y="57"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Sehr gut! Dann sind wir jetzt auch toll vorbereitet auf die nächsten Übungen.  ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Sehr gut! Dann sind wir jetzt auch toll vorbereitet auf die nächsten Übungen. ]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[こんにちは]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>3</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Speech Settings" id="9" localization="8" tooltip="Sets the speech settings for system wide usage." x="87" y="208"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.mem.declareEvent( 'sys/speech/shape' )
        self.mem.declareEvent( 'sys/speech/speed' )

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.mem.insertData( 'sys/speech/shape', self.getParameter("Voice shaping (%)") )
        self.mem.insertData( 'sys/speech/speed', self.getParameter("Speed (%)") )

        self.logger.debug( "Set voice parameter to " + str(self.getParameter("Voice shaping (%)")) + "% shape and " + str(self.getParameter("Speed (%)")) + "% speed" )

        self.onStopped() #activate the output of the box

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /></Box><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>